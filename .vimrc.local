set autoread
autocmd! bufwritepost $MYVIMRC source $MYVIMRC
map <Leader>m :MRU<CR>
"В командном режиме удалять через BACKSPACE 
nnoremap <bs> X

noremap <F2> :w<cr>
noremap! <F2> <esc>:w<cr>i

noremap  <F5> :BufExplorer<CR>
noremap! <F5> <esc>:BufExplorer<CR>

" F6 - предыдущий буфер
noremap <F6> :bp<cr>
noremap! <F6> <esc>:bp<cr>i

" F7 - следующий буфер
noremap <F7> :bn<cr>
noremap! <F7> <esc>:bn<cr>i


" Tab navigation like Firefox.
"nnoremap <C-S-tab> :tabprevious<CR>
"nnoremap <C-left>  :tabprevious<CR>
"noremap  <C-tab>   :tabnext<CR>
"noremap  <C-right> :tabnext<CR>
"nnoremap <C-t>     :tabnew<CR>
"inoremap <C-left> <Esc>:tabprevious<CR>i
"inoremap <C-S-tab> <Esc>:tabprevious<CR>i
"inoremap <C-tab>   <Esc>:tabnext<CR>i
"inoremap <C-right> <Esc>:tabnext<CR>i
"noremap  <C-t>   <Esc>:tabnew<CR>
nnoremap <A-F1> 1gt
nnoremap <A-F2> 2gt
nnoremap <A-F3> 3gt
nnoremap <A-F4> 4gt
nnoremap <A-F5> 5gt
nnoremap <A-F6> 6gt
nnoremap <A-F7> 7gt
nnoremap <A-F8> 8gt
nnoremap <A-F9> 9gt
nnoremap <A-F0> 10gt

nnoremap th  :tabfirst<CR>
nnoremap tj  :tabnext<CR>
nnoremap tk  :tabprev<CR>
nnoremap tl  :tablast<CR>
nnoremap tt  :tabedit<CR>
nnoremap tn  :tabnew<CR>
nnoremap tm  :tabm<CR>
nnoremap td  :tabclose<CR>

"Отключаем стрелки для обучения
noremap <Up>    <Nop>
noremap <Down>  <Nop>
noremap <Left>  <Nop>
noremap <Right> <Nop>

inoremap <Up>    <Nop>
inoremap <Down>  <Nop>
inoremap <Left>  <Nop>
inoremap <Right> <Nop>

"Better window navigation
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

"Изменения размеров окна (шаг)
nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>

if mapcheck("<C-e>") != ''
    execute "unmap <C-e>"
endif

map <leader>E <plug>NERDTreeTabsToggle<CR>

set fileformat=unix
set noswapfile
set encoding=utf-8
set lazyredraw
set shiftwidth=2

"set guifont=Consolas:h12
let g:localvimrc_sandbox=0
let g:localvimrc_ask=0

let windows10=$WINDOWS10         
if windows10 == '0'              
    set t_ku=(ctrl+v , UP arrow)   
    set t_kd=(ctrl+v , DOWN arrow) 
    set t_kr=(ctrl+v , RIGHT arrow)
    set t_kl=(ctrl+v , LEFT arrow) 
endif                            


"let g:indent_guides_auto_colors = 0

function! ChangeBG()
  let s:tbg = &background
  " Inversion
  if s:tbg == "dark"
    set background=light
    hi IndentGuidesOdd  guibg=red   ctermbg=3
    hi IndentGuidesEven guibg=green ctermbg=4
  else
    set background=dark
    hi IndentGuidesOdd  ctermbg=white
    hi IndentGuidesEven ctermbg=lightgrey
  endif
endfunction


if $TMUX != ''
    set clipboard=
endif

"set background=light
"hi IndentGuidesOdd  ctermbg=white
"hi IndentGuidesEven ctermbg=white
"hi IndentGuidesOdd  guibg=red   ctermbg=3
"hi IndentGuidesEven guibg=green ctermbg=4
"let g:airline_theme='solarized'
map <Leader>bg :call ChangeBG() <CR>
map <Leader>gm :Merginal<CR>

"Автообновление и сохранение
au FocusGained,BufEnter * :silent! !
au FocusLost,WinLeave * :silent! w

"map <Leader>gm :CtrlPModified<CR>
"map <Leader>gM :CtrlPBranch<CR>

set shell=sh

autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>
" for json
autocmd FileType json noremap <buffer> <c-f> :call JsonBeautify()<cr>
" for jsx
autocmd FileType javascript.jsx noremap <buffer> <c-f> :call JsxBeautify()<cr>
" for html
autocmd FileType html noremap <buffer> <c-f> :call HtmlBeautify()<cr>
" for css or scss
autocmd FileType css noremap <buffer> <c-f> :call CSSBeautify()<cr>"

autocmd FileType javascript vnoremap <buffer>  <c-f> :call RangeJsBeautify()<cr>
autocmd FileType json vnoremap <buffer> <c-f> :call RangeJsonBeautify()<cr>
autocmd FileType javascript.jsx vnoremap <buffer> <c-f> :call RangeJsxBeautify()<cr>
autocmd FileType html vnoremap <buffer> <c-f> :call RangeHtmlBeautify()<cr>
autocmd FileType css vnoremap <buffer> <c-f> :call RangeCSSBeautify()<cr>

"let g:config_Beautifier = {}
"let g:config_Beautifier['js'] = {}
"let g:config_Beautifier['js'].indent_size = '2'
"
